// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class ModificaPasswordTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "../commons/driver/chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void modificaPasswordPasswordAttualeErrata() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("dummy");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-password")).sendKeys(Keys.ENTER);
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("settings-link")));
    }
    driver.findElement(By.id("settings-link")).click();
    {
      WebElement element = driver.findElement(By.id("settings-submit-password"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("settings-input-old-password")).click();
    driver.findElement(By.id("settings-input-old-password")).sendKeys("1");
    driver.findElement(By.id("settings-input-new-password")).sendKeys("a1234");
    driver.findElement(By.id("settings-input-new-password-again")).sendKeys("a1234");
    driver.findElement(By.id("settings-submit-password")).click();
    assertThat(driver.findElement(By.id("password-change-message")).getText(), is("Password corrente errata."));
  }
  @Test
  public void modificaPasswordOK() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("puppet");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-password")).sendKeys(Keys.ENTER);
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("settings-link")));
    }
    driver.findElement(By.id("settings-link")).click();
    driver.findElement(By.id("settings-input-old-password")).click();
    driver.findElement(By.id("settings-input-old-password")).sendKeys("123");
    driver.findElement(By.id("settings-input-new-password")).sendKeys("a1234");
    driver.findElement(By.id("settings-input-new-password-again")).sendKeys("a1234");
    driver.findElement(By.id("settings-submit-password")).click();
    assertThat(driver.findElement(By.id("password-change-message")).getText(), is("Password modificata con successo!"));
  }
  @Test
  public void modificaPasswordNuovaPasswordMancante() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("dummy");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("settings-link")));
    }
    driver.findElement(By.id("settings-link")).click();
    driver.findElement(By.id("settings-input-old-password")).click();
    driver.findElement(By.id("settings-input-old-password")).sendKeys("123");
    driver.findElement(By.id("settings-input-new-password")).click();
    driver.findElement(By.id("settings-input-new-password")).sendKeys("a1234");
    driver.findElement(By.id("settings-submit-password")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@password-change-message,\'\')]"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void modificaPasswordNonCoincidenti() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("dummy");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-password")).sendKeys(Keys.ENTER);
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("settings-link")));
    }
    driver.findElement(By.id("settings-link")).click();
    driver.findElement(By.id("settings-input-old-password")).click();
    driver.findElement(By.id("settings-input-old-password")).sendKeys("123");
    driver.findElement(By.id("settings-input-new-password")).sendKeys("a1234");
    driver.findElement(By.id("settings-input-new-password-again")).sendKeys("a1235");
    driver.findElement(By.id("settings-submit-password")).click();
    assertThat(driver.findElement(By.id("password-change-message")).getText(), is("Le password non coincidono."));
  }
  @Test
  public void modificaPasswordFormatoNuovaPasswordInvalido() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("dummy");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.id("settings-link")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("settings-link")));
    }
    driver.findElement(By.id("settings-link")).click();
    driver.findElement(By.id("settings-input-old-password")).sendKeys("123");
    driver.findElement(By.id("settings-input-new-password")).sendKeys("a123");
    driver.findElement(By.id("settings-input-new-password-again")).sendKeys("a123");
    driver.findElement(By.id("settings-submit-password")).click();
    driver.findElement(By.id("settings-submit-password")).click();
    assertThat(driver.findElement(By.id("password-change-message")).getText(), is("La password deve avere almeno cinque caratteri, di cui almeno una lettera e un numero."));
  }
}
