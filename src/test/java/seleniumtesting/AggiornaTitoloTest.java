// Generated by Selenium IDE
package seleniumtesting;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class AggiornaTitoloTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "../commons/driver/chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void aggiornaTitoloFormatoIDErrato() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).sendKeys("abc");
    driver.findElement(By.id("update-game-price")).click();
    driver.findElement(By.id("update-game-price")).sendKeys("55");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Formato ID non valido"));
  }
  @Test
  public void aggiornaTitoloFormatoPrezzoErrato() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).sendKeys("3");
    driver.findElement(By.id("update-game-price")).click();
    driver.findElement(By.id("update-game-price")).sendKeys("abc");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Formato prezzo non valido"));
  }
  @Test
  public void aggiornaTitoloIDMancante() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-price")).click();
    driver.findElement(By.id("update-game-price")).sendKeys("55");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("ID: campo obbligatorio"));
  }
  @Test
  public void aggiornaTitoloOK() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-form")).click();
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).click();
    driver.findElement(By.id("update-game-id")).sendKeys("2");
    driver.findElement(By.id("update-game-price")).sendKeys("100");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Gioco aggiornato con successo!"));
  }
  @Test
  public void aggiornaTitoloPrezzoMancante() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).click();
    driver.findElement(By.id("update-game-id")).sendKeys("3");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Prezzo: campo obbligatorio"));
  }
  @Test
  public void aggiornaTitoloPrezzoNegativo() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).click();
    driver.findElement(By.id("update-game-id")).sendKeys("3");
    driver.findElement(By.id("update-game-price")).sendKeys("-10");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Prezzo negativo"));
  }
  @Test
  public void aggiornaTitoloTitoloInesistente() {
    driver.get("http://localhost:8080/shodan_maven/");
    driver.manage().window().setSize(new Dimension(1898, 1018));
    driver.findElement(By.id("login-username")).click();
    driver.findElement(By.id("login-username")).sendKeys("admin");
    driver.findElement(By.id("login-password")).click();
    driver.findElement(By.id("login-password")).sendKeys("123");
    driver.findElement(By.id("login-submit")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("roles-link")));
    }
    driver.findElement(By.id("update-game-id")).click();
    driver.findElement(By.id("update-game-id")).sendKeys("999");
    driver.findElement(By.id("update-game-price")).sendKeys("55");
    driver.findElement(By.cssSelector(".button:nth-child(5)")).click();
    assertThat(driver.findElement(By.id("update-game-result")).getText(), is("Titolo non presente"));
  }
}
